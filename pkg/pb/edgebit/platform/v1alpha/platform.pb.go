// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: edgebit/platform/v1alpha/platform.proto

package platformv1alpha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VulnSeverity int32

const (
	VulnSeverity_VULN_SEVERITY_UNSPECIFIED VulnSeverity = 0
	VulnSeverity_VULN_SEVERITY_NEGLIGIBLE  VulnSeverity = 1
	VulnSeverity_VULN_SEVERITY_LOW         VulnSeverity = 2
	VulnSeverity_VULN_SEVERITY_MEDIUM      VulnSeverity = 3
	VulnSeverity_VULN_SEVERITY_HIGH        VulnSeverity = 4
	VulnSeverity_VULN_SEVERITY_CRITICAL    VulnSeverity = 5
)

// Enum value maps for VulnSeverity.
var (
	VulnSeverity_name = map[int32]string{
		0: "VULN_SEVERITY_UNSPECIFIED",
		1: "VULN_SEVERITY_NEGLIGIBLE",
		2: "VULN_SEVERITY_LOW",
		3: "VULN_SEVERITY_MEDIUM",
		4: "VULN_SEVERITY_HIGH",
		5: "VULN_SEVERITY_CRITICAL",
	}
	VulnSeverity_value = map[string]int32{
		"VULN_SEVERITY_UNSPECIFIED": 0,
		"VULN_SEVERITY_NEGLIGIBLE":  1,
		"VULN_SEVERITY_LOW":         2,
		"VULN_SEVERITY_MEDIUM":      3,
		"VULN_SEVERITY_HIGH":        4,
		"VULN_SEVERITY_CRITICAL":    5,
	}
)

func (x VulnSeverity) Enum() *VulnSeverity {
	p := new(VulnSeverity)
	*p = x
	return p
}

func (x VulnSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VulnSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[0].Descriptor()
}

func (VulnSeverity) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[0]
}

func (x VulnSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VulnSeverity.Descriptor instead.
func (VulnSeverity) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{0}
}

type VulnFixState int32

const (
	VulnFixState_VULN_FIX_STATE_UNSPECIFIED VulnFixState = 0
	VulnFixState_VULN_FIX_STATE_NOTFIXED    VulnFixState = 1
	VulnFixState_VULN_FIX_STATE_WONTFIX     VulnFixState = 2
	VulnFixState_VULN_FIX_STATE_FIXED       VulnFixState = 3
)

// Enum value maps for VulnFixState.
var (
	VulnFixState_name = map[int32]string{
		0: "VULN_FIX_STATE_UNSPECIFIED",
		1: "VULN_FIX_STATE_NOTFIXED",
		2: "VULN_FIX_STATE_WONTFIX",
		3: "VULN_FIX_STATE_FIXED",
	}
	VulnFixState_value = map[string]int32{
		"VULN_FIX_STATE_UNSPECIFIED": 0,
		"VULN_FIX_STATE_NOTFIXED":    1,
		"VULN_FIX_STATE_WONTFIX":     2,
		"VULN_FIX_STATE_FIXED":       3,
	}
)

func (x VulnFixState) Enum() *VulnFixState {
	p := new(VulnFixState)
	*p = x
	return p
}

func (x VulnFixState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VulnFixState) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[1].Descriptor()
}

func (VulnFixState) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[1]
}

func (x VulnFixState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VulnFixState.Descriptor instead.
func (VulnFixState) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{1}
}

type SBOMFormat int32

const (
	SBOMFormat_SBOM_FORMAT_UNSPECIFIED    SBOMFormat = 0
	SBOMFormat_SBOM_FORMAT_SYFT           SBOMFormat = 1
	SBOMFormat_SBOM_FORMAT_SPDX_JSON      SBOMFormat = 2
	SBOMFormat_SBOM_FORMAT_CYCLONEDX_JSON SBOMFormat = 3
	SBOMFormat_SBOM_FORMAT_CYCLONEDX_XML  SBOMFormat = 4
)

// Enum value maps for SBOMFormat.
var (
	SBOMFormat_name = map[int32]string{
		0: "SBOM_FORMAT_UNSPECIFIED",
		1: "SBOM_FORMAT_SYFT",
		2: "SBOM_FORMAT_SPDX_JSON",
		3: "SBOM_FORMAT_CYCLONEDX_JSON",
		4: "SBOM_FORMAT_CYCLONEDX_XML",
	}
	SBOMFormat_value = map[string]int32{
		"SBOM_FORMAT_UNSPECIFIED":    0,
		"SBOM_FORMAT_SYFT":           1,
		"SBOM_FORMAT_SPDX_JSON":      2,
		"SBOM_FORMAT_CYCLONEDX_JSON": 3,
		"SBOM_FORMAT_CYCLONEDX_XML":  4,
	}
)

func (x SBOMFormat) Enum() *SBOMFormat {
	p := new(SBOMFormat)
	*p = x
	return p
}

func (x SBOMFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SBOMFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[2].Descriptor()
}

func (SBOMFormat) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[2]
}

func (x SBOMFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SBOMFormat.Descriptor instead.
func (SBOMFormat) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{2}
}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Project) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListProjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProjectsRequest) Reset() {
	*x = ListProjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsRequest) ProtoMessage() {}

func (x *ListProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{1}
}

type ListProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *ListProjectsResponse) Reset() {
	*x = ListProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse) ProtoMessage() {}

func (x *ListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{2}
}

func (x *ListProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type GenerateAgentDeployTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GenerateAgentDeployTokenRequest) Reset() {
	*x = GenerateAgentDeployTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAgentDeployTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAgentDeployTokenRequest) ProtoMessage() {}

func (x *GenerateAgentDeployTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAgentDeployTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateAgentDeployTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateAgentDeployTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GenerateAgentDeployTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployToken string `protobuf:"bytes,1,opt,name=deploy_token,json=deployToken,proto3" json:"deploy_token,omitempty"`
}

func (x *GenerateAgentDeployTokenResponse) Reset() {
	*x = GenerateAgentDeployTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAgentDeployTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAgentDeployTokenResponse) ProtoMessage() {}

func (x *GenerateAgentDeployTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAgentDeployTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateAgentDeployTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateAgentDeployTokenResponse) GetDeployToken() string {
	if x != nil {
		return x.DeployToken
	}
	return ""
}

type ListMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListMachinesRequest) Reset() {
	*x = ListMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesRequest) ProtoMessage() {}

func (x *ListMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesRequest.ProtoReflect.Descriptor instead.
func (*ListMachinesRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{5}
}

func (x *ListMachinesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListMachinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*Machine `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *ListMachinesResponse) Reset() {
	*x = ListMachinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesResponse) ProtoMessage() {}

func (x *ListMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesResponse.ProtoReflect.Descriptor instead.
func (*ListMachinesResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{6}
}

func (x *ListMachinesResponse) GetMachines() []*Machine {
	if x != nil {
		return x.Machines
	}
	return nil
}

type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId                 string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Hostname                  string                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	PolicyViolations          int32                  `protobuf:"varint,4,opt,name=policy_violations,json=policyViolations,proto3" json:"policy_violations,omitempty"`
	Workloads                 int32                  `protobuf:"varint,5,opt,name=workloads,proto3" json:"workloads,omitempty"`
	TotalVulnerabilities      int32                  `protobuf:"varint,6,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32                  `protobuf:"varint,7,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	OperatingSystem           string                 `protobuf:"bytes,8,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	LastUpdated               *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	AgentAlive                bool                   `protobuf:"varint,10,opt,name=agent_alive,json=agentAlive,proto3" json:"agent_alive,omitempty"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{7}
}

func (x *Machine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Machine) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Machine) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Machine) GetPolicyViolations() int32 {
	if x != nil {
		return x.PolicyViolations
	}
	return 0
}

func (x *Machine) GetWorkloads() int32 {
	if x != nil {
		return x.Workloads
	}
	return 0
}

func (x *Machine) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *Machine) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *Machine) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *Machine) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *Machine) GetAgentAlive() bool {
	if x != nil {
		return x.AgentAlive
	}
	return false
}

type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                      string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	InUse                     bool     `protobuf:"varint,4,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	TotalVulnerabilities      int32    `protobuf:"varint,5,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32    `protobuf:"varint,6,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	WorkloadId                string   `protobuf:"bytes,7,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
	SourceId                  string   `protobuf:"bytes,8,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	VulnerabilityIds          []string `protobuf:"bytes,9,rep,name=vulnerability_ids,json=vulnerabilityIds,proto3" json:"vulnerability_ids,omitempty"`
	Version                   string   `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{8}
}

func (x *Package) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Package) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Package) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

func (x *Package) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *Package) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *Package) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *Package) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *Package) GetVulnerabilityIds() []string {
	if x != nil {
		return x.VulnerabilityIds
	}
	return nil
}

func (x *Package) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename   string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	InUse      bool   `protobuf:"varint,3,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	Executable bool   `protobuf:"varint,4,opt,name=executable,proto3" json:"executable,omitempty"`
	PackageId  string `protobuf:"bytes,5,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	SourceId   string `protobuf:"bytes,6,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{9}
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *File) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

func (x *File) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

func (x *File) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *File) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type VulnReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *VulnReference) Reset() {
	*x = VulnReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnReference) ProtoMessage() {}

func (x *VulnReference) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnReference.ProtoReflect.Descriptor instead.
func (*VulnReference) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{10}
}

func (x *VulnReference) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Vulnerability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Severity    VulnSeverity     `protobuf:"varint,3,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.VulnSeverity" json:"severity,omitempty"`
	References  []*VulnReference `protobuf:"bytes,4,rep,name=references,proto3" json:"references,omitempty"`
	FixState    VulnFixState     `protobuf:"varint,5,opt,name=fix_state,json=fixState,proto3,enum=edgebit.platform.v1alpha.VulnFixState" json:"fix_state,omitempty"`
}

func (x *Vulnerability) Reset() {
	*x = Vulnerability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vulnerability) ProtoMessage() {}

func (x *Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vulnerability.ProtoReflect.Descriptor instead.
func (*Vulnerability) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{11}
}

func (x *Vulnerability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vulnerability) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Vulnerability) GetSeverity() VulnSeverity {
	if x != nil {
		return x.Severity
	}
	return VulnSeverity_VULN_SEVERITY_UNSPECIFIED
}

func (x *Vulnerability) GetReferences() []*VulnReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *Vulnerability) GetFixState() VulnFixState {
	if x != nil {
		return x.FixState
	}
	return VulnFixState_VULN_FIX_STATE_UNSPECIFIED
}

type Workload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId                 string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                      string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Trust                     string `protobuf:"bytes,5,opt,name=trust,proto3" json:"trust,omitempty"`
	TotalVulnerabilities      int32  `protobuf:"varint,6,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32  `protobuf:"varint,7,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	SourceId                  string `protobuf:"bytes,8,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *Workload) Reset() {
	*x = Workload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workload) ProtoMessage() {}

func (x *Workload) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workload.ProtoReflect.Descriptor instead.
func (*Workload) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{12}
}

func (x *Workload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Workload) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Workload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workload) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Workload) GetTrust() string {
	if x != nil {
		return x.Trust
	}
	return ""
}

func (x *Workload) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *Workload) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *Workload) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type GetMachineInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	MachineId string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *GetMachineInventoryRequest) Reset() {
	*x = GetMachineInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineInventoryRequest) ProtoMessage() {}

func (x *GetMachineInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetMachineInventoryRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{13}
}

func (x *GetMachineInventoryRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetMachineInventoryRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type GetMachineInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine         *Machine         `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Packages        []*Package       `protobuf:"bytes,2,rep,name=packages,proto3" json:"packages,omitempty"`
	FilesInUse      []*File          `protobuf:"bytes,3,rep,name=files_in_use,json=filesInUse,proto3" json:"files_in_use,omitempty"`
	Workloads       []*Workload      `protobuf:"bytes,4,rep,name=workloads,proto3" json:"workloads,omitempty"`
	Vulnerabilities []*Vulnerability `protobuf:"bytes,5,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
}

func (x *GetMachineInventoryResponse) Reset() {
	*x = GetMachineInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineInventoryResponse) ProtoMessage() {}

func (x *GetMachineInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetMachineInventoryResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{14}
}

func (x *GetMachineInventoryResponse) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetPackages() []*Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetFilesInUse() []*File {
	if x != nil {
		return x.FilesInUse
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetWorkloads() []*Workload {
	if x != nil {
		return x.Workloads
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

type CreateOrgAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateOrgAccessTokenRequest) Reset() {
	*x = CreateOrgAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgAccessTokenRequest) ProtoMessage() {}

func (x *CreateOrgAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*CreateOrgAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{15}
}

func (x *CreateOrgAccessTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateOrgAccessTokenRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateOrgAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Token       string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateOrgAccessTokenResponse) Reset() {
	*x = CreateOrgAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgAccessTokenResponse) ProtoMessage() {}

func (x *CreateOrgAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*CreateOrgAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{16}
}

func (x *CreateOrgAccessTokenResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateOrgAccessTokenResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOrgAccessTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListOrgAccessTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListOrgAccessTokensRequest) Reset() {
	*x = ListOrgAccessTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgAccessTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgAccessTokensRequest) ProtoMessage() {}

func (x *ListOrgAccessTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgAccessTokensRequest.ProtoReflect.Descriptor instead.
func (*ListOrgAccessTokensRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{17}
}

func (x *ListOrgAccessTokensRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListOrgAccessTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*OrgAccessToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *ListOrgAccessTokensResponse) Reset() {
	*x = ListOrgAccessTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgAccessTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgAccessTokensResponse) ProtoMessage() {}

func (x *ListOrgAccessTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgAccessTokensResponse.ProtoReflect.Descriptor instead.
func (*ListOrgAccessTokensResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{18}
}

func (x *ListOrgAccessTokensResponse) GetTokens() []*OrgAccessToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type OrgAccessToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsed    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
}

func (x *OrgAccessToken) Reset() {
	*x = OrgAccessToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAccessToken) ProtoMessage() {}

func (x *OrgAccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAccessToken.ProtoReflect.Descriptor instead.
func (*OrgAccessToken) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{19}
}

func (x *OrgAccessToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrgAccessToken) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *OrgAccessToken) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrgAccessToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OrgAccessToken) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

type DeleteOrgAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOrgAccessTokenRequest) Reset() {
	*x = DeleteOrgAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrgAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrgAccessTokenRequest) ProtoMessage() {}

func (x *DeleteOrgAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrgAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrgAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteOrgAccessTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteOrgAccessTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteOrgAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteOrgAccessTokenResponse) Reset() {
	*x = DeleteOrgAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrgAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrgAccessTokenResponse) ProtoMessage() {}

func (x *DeleteOrgAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrgAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*DeleteOrgAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{21}
}

// An image with no further details. This primarily happens when an SBOM tool
// (e.g. syft) is ran on the workload (e.g. after a host boots)
type GenericImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenericImage) Reset() {
	*x = GenericImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericImage) ProtoMessage() {}

func (x *GenericImage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericImage.ProtoReflect.Descriptor instead.
func (*GenericImage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{22}
}

// Docker image
type DockerImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Potentially full tag in registry/user/name:tag format.
	// The full format does not need to be used. The same defaults
	// that "docker pull" assumes will work.
	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *DockerImage) Reset() {
	*x = DockerImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerImage) ProtoMessage() {}

func (x *DockerImage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerImage.ProtoReflect.Descriptor instead.
func (*DockerImage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{23}
}

func (x *DockerImage) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type AMI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *AMI) Reset() {
	*x = AMI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMI) ProtoMessage() {}

func (x *AMI) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMI.ProtoReflect.Descriptor instead.
func (*AMI) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{24}
}

func (x *AMI) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AMI) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type: Docker | OCI | AMI | ...
	//
	// Types that are assignable to Kind:
	//	*Image_Generic
	//	*Image_Docker
	//	*Image_Ami
	Kind isImage_Kind `protobuf_oneof:"kind"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{25}
}

func (m *Image) GetKind() isImage_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Image) GetGeneric() *GenericImage {
	if x, ok := x.GetKind().(*Image_Generic); ok {
		return x.Generic
	}
	return nil
}

func (x *Image) GetDocker() *DockerImage {
	if x, ok := x.GetKind().(*Image_Docker); ok {
		return x.Docker
	}
	return nil
}

func (x *Image) GetAmi() *AMI {
	if x, ok := x.GetKind().(*Image_Ami); ok {
		return x.Ami
	}
	return nil
}

type isImage_Kind interface {
	isImage_Kind()
}

type Image_Generic struct {
	Generic *GenericImage `protobuf:"bytes,1,opt,name=generic,proto3,oneof"`
}

type Image_Docker struct {
	Docker *DockerImage `protobuf:"bytes,2,opt,name=docker,proto3,oneof"`
}

type Image_Ami struct {
	Ami *AMI `protobuf:"bytes,3,opt,name=ami,proto3,oneof"`
}

func (*Image_Generic) isImage_Kind() {}

func (*Image_Docker) isImage_Kind() {}

func (*Image_Ami) isImage_Kind() {}

type UploadSBOMHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      string            `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Format         SBOMFormat        `protobuf:"varint,2,opt,name=format,proto3,enum=edgebit.platform.v1alpha.SBOMFormat" json:"format,omitempty"`
	Labels         map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ImageId        string            `protobuf:"bytes,4,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Image          *Image            `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	SourceRepoUrl  string            `protobuf:"bytes,6,opt,name=source_repo_url,json=sourceRepoUrl,proto3" json:"source_repo_url,omitempty"`
	SourceCommitId string            `protobuf:"bytes,7,opt,name=source_commit_id,json=sourceCommitId,proto3" json:"source_commit_id,omitempty"`
}

func (x *UploadSBOMHeader) Reset() {
	*x = UploadSBOMHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSBOMHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSBOMHeader) ProtoMessage() {}

func (x *UploadSBOMHeader) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSBOMHeader.ProtoReflect.Descriptor instead.
func (*UploadSBOMHeader) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{26}
}

func (x *UploadSBOMHeader) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UploadSBOMHeader) GetFormat() SBOMFormat {
	if x != nil {
		return x.Format
	}
	return SBOMFormat_SBOM_FORMAT_UNSPECIFIED
}

func (x *UploadSBOMHeader) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UploadSBOMHeader) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *UploadSBOMHeader) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *UploadSBOMHeader) GetSourceRepoUrl() string {
	if x != nil {
		return x.SourceRepoUrl
	}
	return ""
}

func (x *UploadSBOMHeader) GetSourceCommitId() string {
	if x != nil {
		return x.SourceCommitId
	}
	return ""
}

type UploadSBOMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//	*UploadSBOMRequest_Header
	//	*UploadSBOMRequest_Data
	Kind isUploadSBOMRequest_Kind `protobuf_oneof:"kind"`
}

func (x *UploadSBOMRequest) Reset() {
	*x = UploadSBOMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSBOMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSBOMRequest) ProtoMessage() {}

func (x *UploadSBOMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSBOMRequest.ProtoReflect.Descriptor instead.
func (*UploadSBOMRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{27}
}

func (m *UploadSBOMRequest) GetKind() isUploadSBOMRequest_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *UploadSBOMRequest) GetHeader() *UploadSBOMHeader {
	if x, ok := x.GetKind().(*UploadSBOMRequest_Header); ok {
		return x.Header
	}
	return nil
}

func (x *UploadSBOMRequest) GetData() []byte {
	if x, ok := x.GetKind().(*UploadSBOMRequest_Data); ok {
		return x.Data
	}
	return nil
}

type isUploadSBOMRequest_Kind interface {
	isUploadSBOMRequest_Kind()
}

type UploadSBOMRequest_Header struct {
	Header *UploadSBOMHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type UploadSBOMRequest_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*UploadSBOMRequest_Header) isUploadSBOMRequest_Kind() {}

func (*UploadSBOMRequest_Data) isUploadSBOMRequest_Kind() {}

type UploadSBOMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UploadSBOMResponse) Reset() {
	*x = UploadSBOMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSBOMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSBOMResponse) ProtoMessage() {}

func (x *UploadSBOMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSBOMResponse.ProtoReflect.Descriptor instead.
func (*UploadSBOMResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{28}
}

func (x *UploadSBOMResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_edgebit_platform_v1alpha_platform_proto protoreflect.FileDescriptor

var file_edgebit_platform_v1alpha_platform_proto_rawDesc = []byte{
	0x0a, 0x27, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x15, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x1f, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x20,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x34, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x22, 0x9e, 0x03, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x22, 0xd1, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x15,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x3d, 0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x76, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e,
	0x5f, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x21, 0x0a,
	0x0d, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x93, 0x02, 0x0a, 0x0d, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x43, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x56, 0x75, 0x6c, 0x6e, 0x46, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x66, 0x69,
	0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x88, 0x02, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x5a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0xf0, 0x02,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x51, 0x0a,
	0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x5e, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x66, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3b, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x0e, 0x4f, 0x72, 0x67, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x22, 0x4c,
	0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x1c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0e, 0x0a, 0x0c,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x1f, 0x0a, 0x0b,
	0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x2d, 0x0a,
	0x03, 0x41, 0x4d, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xc7, 0x01, 0x0a,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x12, 0x3f, 0x0a, 0x06, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x03, 0x61,
	0x6d, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x41, 0x4d, 0x49, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6d, 0x69, 0x42, 0x06,
	0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x9e, 0x03, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x42, 0x4f, 0x4d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x4e, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55,
	0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x77, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42,
	0x4f, 0x4d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x22, 0x24, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x2a, 0xb0, 0x01, 0x0a, 0x0c, 0x56, 0x75, 0x6c, 0x6e, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x55, 0x4c, 0x4e, 0x5f,
	0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53,
	0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x45, 0x47, 0x4c, 0x49, 0x47, 0x49, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56,
	0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x56,
	0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44,
	0x49, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45,
	0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x04, 0x12, 0x1a, 0x0a,
	0x16, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43,
	0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x05, 0x2a, 0x81, 0x01, 0x0a, 0x0c, 0x56, 0x75,
	0x6c, 0x6e, 0x46, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x56, 0x55,
	0x4c, 0x4e, 0x5f, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x55,
	0x4c, 0x4e, 0x5f, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54,
	0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x55, 0x4c, 0x4e, 0x5f,
	0x46, 0x49, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x4f, 0x4e, 0x54, 0x46, 0x49,
	0x58, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x46, 0x49, 0x58, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x99, 0x01,
	0x0a, 0x0a, 0x53, 0x42, 0x4f, 0x4d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x17,
	0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x42, 0x4f,
	0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53, 0x59, 0x46, 0x54, 0x10, 0x01, 0x12,
	0x19, 0x0a, 0x15, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53,
	0x50, 0x44, 0x58, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x42,
	0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x43, 0x59, 0x43, 0x4c, 0x4f, 0x4e,
	0x45, 0x44, 0x58, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x42,
	0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x43, 0x59, 0x43, 0x4c, 0x4f, 0x4e,
	0x45, 0x44, 0x58, 0x5f, 0x58, 0x4d, 0x4c, 0x10, 0x04, 0x32, 0xa0, 0x08, 0x0a, 0x17, 0x45, 0x64,
	0x67, 0x65, 0x42, 0x69, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x50, 0x49, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x39, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84,
	0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6b, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x12, 0x2b, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x42, 0x4f, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x42, 0xfe, 0x01, 0x0a,
	0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x42, 0x0d, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x69, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03,
	0x45, 0x50, 0x58, 0xaa, 0x02, 0x18, 0x45, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xca, 0x02,
	0x18, 0x45, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xe2, 0x02, 0x24, 0x45, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x1a, 0x45, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_edgebit_platform_v1alpha_platform_proto_rawDescOnce sync.Once
	file_edgebit_platform_v1alpha_platform_proto_rawDescData = file_edgebit_platform_v1alpha_platform_proto_rawDesc
)

func file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP() []byte {
	file_edgebit_platform_v1alpha_platform_proto_rawDescOnce.Do(func() {
		file_edgebit_platform_v1alpha_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_edgebit_platform_v1alpha_platform_proto_rawDescData)
	})
	return file_edgebit_platform_v1alpha_platform_proto_rawDescData
}

var file_edgebit_platform_v1alpha_platform_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_edgebit_platform_v1alpha_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_edgebit_platform_v1alpha_platform_proto_goTypes = []interface{}{
	(VulnSeverity)(0),                        // 0: edgebit.platform.v1alpha.VulnSeverity
	(VulnFixState)(0),                        // 1: edgebit.platform.v1alpha.VulnFixState
	(SBOMFormat)(0),                          // 2: edgebit.platform.v1alpha.SBOMFormat
	(*Project)(nil),                          // 3: edgebit.platform.v1alpha.Project
	(*ListProjectsRequest)(nil),              // 4: edgebit.platform.v1alpha.ListProjectsRequest
	(*ListProjectsResponse)(nil),             // 5: edgebit.platform.v1alpha.ListProjectsResponse
	(*GenerateAgentDeployTokenRequest)(nil),  // 6: edgebit.platform.v1alpha.GenerateAgentDeployTokenRequest
	(*GenerateAgentDeployTokenResponse)(nil), // 7: edgebit.platform.v1alpha.GenerateAgentDeployTokenResponse
	(*ListMachinesRequest)(nil),              // 8: edgebit.platform.v1alpha.ListMachinesRequest
	(*ListMachinesResponse)(nil),             // 9: edgebit.platform.v1alpha.ListMachinesResponse
	(*Machine)(nil),                          // 10: edgebit.platform.v1alpha.Machine
	(*Package)(nil),                          // 11: edgebit.platform.v1alpha.Package
	(*File)(nil),                             // 12: edgebit.platform.v1alpha.File
	(*VulnReference)(nil),                    // 13: edgebit.platform.v1alpha.VulnReference
	(*Vulnerability)(nil),                    // 14: edgebit.platform.v1alpha.Vulnerability
	(*Workload)(nil),                         // 15: edgebit.platform.v1alpha.Workload
	(*GetMachineInventoryRequest)(nil),       // 16: edgebit.platform.v1alpha.GetMachineInventoryRequest
	(*GetMachineInventoryResponse)(nil),      // 17: edgebit.platform.v1alpha.GetMachineInventoryResponse
	(*CreateOrgAccessTokenRequest)(nil),      // 18: edgebit.platform.v1alpha.CreateOrgAccessTokenRequest
	(*CreateOrgAccessTokenResponse)(nil),     // 19: edgebit.platform.v1alpha.CreateOrgAccessTokenResponse
	(*ListOrgAccessTokensRequest)(nil),       // 20: edgebit.platform.v1alpha.ListOrgAccessTokensRequest
	(*ListOrgAccessTokensResponse)(nil),      // 21: edgebit.platform.v1alpha.ListOrgAccessTokensResponse
	(*OrgAccessToken)(nil),                   // 22: edgebit.platform.v1alpha.OrgAccessToken
	(*DeleteOrgAccessTokenRequest)(nil),      // 23: edgebit.platform.v1alpha.DeleteOrgAccessTokenRequest
	(*DeleteOrgAccessTokenResponse)(nil),     // 24: edgebit.platform.v1alpha.DeleteOrgAccessTokenResponse
	(*GenericImage)(nil),                     // 25: edgebit.platform.v1alpha.GenericImage
	(*DockerImage)(nil),                      // 26: edgebit.platform.v1alpha.DockerImage
	(*AMI)(nil),                              // 27: edgebit.platform.v1alpha.AMI
	(*Image)(nil),                            // 28: edgebit.platform.v1alpha.Image
	(*UploadSBOMHeader)(nil),                 // 29: edgebit.platform.v1alpha.UploadSBOMHeader
	(*UploadSBOMRequest)(nil),                // 30: edgebit.platform.v1alpha.UploadSBOMRequest
	(*UploadSBOMResponse)(nil),               // 31: edgebit.platform.v1alpha.UploadSBOMResponse
	nil,                                      // 32: edgebit.platform.v1alpha.UploadSBOMHeader.LabelsEntry
	(*timestamppb.Timestamp)(nil),            // 33: google.protobuf.Timestamp
}
var file_edgebit_platform_v1alpha_platform_proto_depIdxs = []int32{
	33, // 0: edgebit.platform.v1alpha.Project.created_at:type_name -> google.protobuf.Timestamp
	33, // 1: edgebit.platform.v1alpha.Project.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 2: edgebit.platform.v1alpha.ListProjectsResponse.projects:type_name -> edgebit.platform.v1alpha.Project
	10, // 3: edgebit.platform.v1alpha.ListMachinesResponse.machines:type_name -> edgebit.platform.v1alpha.Machine
	33, // 4: edgebit.platform.v1alpha.Machine.last_updated:type_name -> google.protobuf.Timestamp
	0,  // 5: edgebit.platform.v1alpha.Vulnerability.severity:type_name -> edgebit.platform.v1alpha.VulnSeverity
	13, // 6: edgebit.platform.v1alpha.Vulnerability.references:type_name -> edgebit.platform.v1alpha.VulnReference
	1,  // 7: edgebit.platform.v1alpha.Vulnerability.fix_state:type_name -> edgebit.platform.v1alpha.VulnFixState
	10, // 8: edgebit.platform.v1alpha.GetMachineInventoryResponse.machine:type_name -> edgebit.platform.v1alpha.Machine
	11, // 9: edgebit.platform.v1alpha.GetMachineInventoryResponse.packages:type_name -> edgebit.platform.v1alpha.Package
	12, // 10: edgebit.platform.v1alpha.GetMachineInventoryResponse.files_in_use:type_name -> edgebit.platform.v1alpha.File
	15, // 11: edgebit.platform.v1alpha.GetMachineInventoryResponse.workloads:type_name -> edgebit.platform.v1alpha.Workload
	14, // 12: edgebit.platform.v1alpha.GetMachineInventoryResponse.vulnerabilities:type_name -> edgebit.platform.v1alpha.Vulnerability
	22, // 13: edgebit.platform.v1alpha.ListOrgAccessTokensResponse.tokens:type_name -> edgebit.platform.v1alpha.OrgAccessToken
	33, // 14: edgebit.platform.v1alpha.OrgAccessToken.created_at:type_name -> google.protobuf.Timestamp
	33, // 15: edgebit.platform.v1alpha.OrgAccessToken.last_used:type_name -> google.protobuf.Timestamp
	25, // 16: edgebit.platform.v1alpha.Image.generic:type_name -> edgebit.platform.v1alpha.GenericImage
	26, // 17: edgebit.platform.v1alpha.Image.docker:type_name -> edgebit.platform.v1alpha.DockerImage
	27, // 18: edgebit.platform.v1alpha.Image.ami:type_name -> edgebit.platform.v1alpha.AMI
	2,  // 19: edgebit.platform.v1alpha.UploadSBOMHeader.format:type_name -> edgebit.platform.v1alpha.SBOMFormat
	32, // 20: edgebit.platform.v1alpha.UploadSBOMHeader.labels:type_name -> edgebit.platform.v1alpha.UploadSBOMHeader.LabelsEntry
	28, // 21: edgebit.platform.v1alpha.UploadSBOMHeader.image:type_name -> edgebit.platform.v1alpha.Image
	29, // 22: edgebit.platform.v1alpha.UploadSBOMRequest.header:type_name -> edgebit.platform.v1alpha.UploadSBOMHeader
	4,  // 23: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListProjects:input_type -> edgebit.platform.v1alpha.ListProjectsRequest
	6,  // 24: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateAgentDeployToken:input_type -> edgebit.platform.v1alpha.GenerateAgentDeployTokenRequest
	8,  // 25: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListMachines:input_type -> edgebit.platform.v1alpha.ListMachinesRequest
	16, // 26: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetMachineInventory:input_type -> edgebit.platform.v1alpha.GetMachineInventoryRequest
	18, // 27: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateOrgAccessToken:input_type -> edgebit.platform.v1alpha.CreateOrgAccessTokenRequest
	20, // 28: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListOrgAccessTokens:input_type -> edgebit.platform.v1alpha.ListOrgAccessTokensRequest
	23, // 29: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteOrgAccessToken:input_type -> edgebit.platform.v1alpha.DeleteOrgAccessTokenRequest
	30, // 30: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UploadSBOM:input_type -> edgebit.platform.v1alpha.UploadSBOMRequest
	5,  // 31: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListProjects:output_type -> edgebit.platform.v1alpha.ListProjectsResponse
	7,  // 32: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateAgentDeployToken:output_type -> edgebit.platform.v1alpha.GenerateAgentDeployTokenResponse
	9,  // 33: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListMachines:output_type -> edgebit.platform.v1alpha.ListMachinesResponse
	17, // 34: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetMachineInventory:output_type -> edgebit.platform.v1alpha.GetMachineInventoryResponse
	19, // 35: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateOrgAccessToken:output_type -> edgebit.platform.v1alpha.CreateOrgAccessTokenResponse
	21, // 36: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListOrgAccessTokens:output_type -> edgebit.platform.v1alpha.ListOrgAccessTokensResponse
	24, // 37: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteOrgAccessToken:output_type -> edgebit.platform.v1alpha.DeleteOrgAccessTokenResponse
	31, // 38: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UploadSBOM:output_type -> edgebit.platform.v1alpha.UploadSBOMResponse
	31, // [31:39] is the sub-list for method output_type
	23, // [23:31] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_edgebit_platform_v1alpha_platform_proto_init() }
func file_edgebit_platform_v1alpha_platform_proto_init() {
	if File_edgebit_platform_v1alpha_platform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAgentDeployTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAgentDeployTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VulnReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vulnerability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrgAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrgAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgAccessTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgAccessTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAccessToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrgAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrgAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSBOMHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSBOMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSBOMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*Image_Generic)(nil),
		(*Image_Docker)(nil),
		(*Image_Ami)(nil),
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*UploadSBOMRequest_Header)(nil),
		(*UploadSBOMRequest_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_edgebit_platform_v1alpha_platform_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_edgebit_platform_v1alpha_platform_proto_goTypes,
		DependencyIndexes: file_edgebit_platform_v1alpha_platform_proto_depIdxs,
		EnumInfos:         file_edgebit_platform_v1alpha_platform_proto_enumTypes,
		MessageInfos:      file_edgebit_platform_v1alpha_platform_proto_msgTypes,
	}.Build()
	File_edgebit_platform_v1alpha_platform_proto = out.File
	file_edgebit_platform_v1alpha_platform_proto_rawDesc = nil
	file_edgebit_platform_v1alpha_platform_proto_goTypes = nil
	file_edgebit_platform_v1alpha_platform_proto_depIdxs = nil
}
